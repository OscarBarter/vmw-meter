Quick Start
~~~~~~~~~~~

Assemble meter (parts and directions in ./doc, circuit board in
./hardware).

Turn on, plug in parallel port

Get the kernel repared
  /sbin/rmmod lp
  /sbin/rmmod ppdev
  /sbin/modprobe parport-pc
  /sbin/modprobe i2c-parport type=3
  /sbin/modprobe  i2c_dev   
  
The i2c device should be in 
  /sys/class/i2c-adapter

The examples assume /dev/i2c-1
I should make this easier to configure.

Currently you need to be root to run them unless /dev/i2c* is configured
to be usable by an ordinary user.

I plan to make a USB version in the future.

Examples
~~~~~~~~

The examples are located in ./src
You can run the *.ascii versions at any time (no need for a meter).

+ clock_demo
   shows clock on digits, unix time on extra LEDs, 
   day of week on color LEDs
+ cpu_meter
   shows CPU usage on display and bargraph
+ music_demo
   music visualization
+ pulse_demo
   Pulsing light pattern
+ set_display
   Lets you set all display segments from command line
+ spin_demo
   Spinning light pattern
+ string_demo
   Test the string output, only first 6 chars displayed
+ scroll_string
   Displays text, scrolling it.  You can do something like
        cat README | ./scroll_string.ascii
   To view a full text file.
+ enemy_attack
   Demo of what it might be like to use the display as
   an auxiliary output for a video game
   

History
~~~~~~~

Soon after aquiring my first Linux box (a 66MHz 486) in 1996, I built
a simple CPU meter using 8 LEDs that hooked directly to output
pins on the parallel port using plans from the internet and a dameon
I wrote myself that read /proc/stat.

In 1998 I decided to go for a fancier setup, one that used alpha-numeric
LEDs to support displaying text among other things.  At the time I was
unable to find any IC that implemented this, despite finding many
that supported plain 7-segment dislpays.

After a few years of on-and-off again development, in 2001 I had a
prototype for a system that talked over the parallel port to a
huge breadboard full of discrete 7400 series logic.  This had a bunch
of flip/flop RAM, parallel shift registers, and a mulitplexed output
driven by a 555 timer.  This was complicated and in the end I
put the project aside.

In 2010 I revived the project.  Now there are various ICs available
that will do most of the hard work, such as the ST2225A.
I settled on using a SAA1064.


-----------------

3 April 2011
Vince Weaver   <vince _at_ deater.net>
